.form {
  display: flex;
  flex: 1;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  gap: 1rem;
}

.howToPlay {
  color: var(--color-text);
}

.howToPlay::before {
  display: inline-block;
  position: relative;
  top: -0.05em;
  width: 1em;
  height: 1em;
  margin: 0 0.5em 0 0;
  padding: 0.2em;
  border: 1.5px solid var(--color-text);
  border-radius: 50%;
  content: "i";
  font-weight: 900;
  font-size: 0.8em;
  line-height: 1;
  text-align: center;
}

.grid {
  --width: min(100vw, 40vh, 380px);
  display: flex;
  flex-direction: column;
  align-self: center;
  justify-content: flex-start;
  justify-self: center;
  width: 100%;
  max-width: var(--width);
  height: 100%;
}

.grid .row {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-gap: 0.2rem;
  margin: 0 0 0.2rem 0;
}

@media (prefers-reduced-motion: no-preference) {
  .grid.badGuess .row.current {
    animation: wiggle 0.5s;
  }
}

.grid.playing .row.current {
  filter: drop-shadow(3px 3px 10px var(--color-bg-0));
}

.letter {
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: center;
  aspect-ratio: 1;
  width: 100%;
  margin: 0;
  border: none;
  border-radius: 2px;
  background: white;
  color: rgba(0, 0, 0, 0.7);
  font-size: calc(0.08 * var(--width));
  text-align: center;
  text-transform: lowercase;
}

.letter.missing {
  background: rgba(255, 255, 255, 0.5);
  color: rgba(0, 0, 0, 0.5);
}

.letter.exact {
  background: var(--color-theme-2);
  color: white;
}

.letter.close {
  border: 2px solid var(--color-theme-2);
}

.selected {
  outline: 2px solid var(--color-theme-1);
}

.controls {
  justify-content: center;
  height: min(18vh, 10rem);
  text-align: center;
}

.keyboard {
  --gap: 0.2rem;
  display: flex;
  position: relative;
  flex-direction: column;
  height: 100%;
  gap: var(--gap);
}

.keyboard .row {
  display: flex;
  flex: 1;
  justify-content: center;
  gap: 0.2rem;
}

.keyboard button,
.keyboard button:disabled {
  --size: min(8vw, 4vh, 40px);
  width: var(--size);
  margin: 0;
  border: none;
  border-radius: 2px;
  background-color: white;
  color: black;
  font-size: calc(var(--size) * 0.5);
}

.keyboard button.exact {
  background: var(--color-theme-2);
  color: white;
}

.keyboard button.missing {
  opacity: 0.5;
}

.keyboard button.close {
  border: 2px solid var(--color-theme-2);
}

.keyboard button:focus {
  outline: none;
  background: var(--color-theme-1);
  color: white;
}

.keyboard button[data-key="enter"],
.keyboard button[data-key="backspace"] {
  position: absolute;
  bottom: 0;
  width: calc(1.5 * var(--size));
  height: calc(1 / 3 * (100% - 2 * var(--gap)));
  padding-top: calc(0.15 * var(--size));
  font-size: calc(0.3 * var(--size));
  text-transform: uppercase;
}

.keyboard button[data-key="enter"] {
  right: calc(50% + 3.5 * var(--size) + 0.8rem);
}

.keyboard button[data-key="backspace"] {
  left: calc(50% + 3.5 * var(--size) + 0.8rem);
}

.keyboard button[data-key="enter"]:disabled {
  opacity: 0.5;
}

.restart {
  width: 100%;
  padding: 1rem;
  border: none;
  border-radius: 2px;
  background: rgba(255, 255, 255, 0.5);
}

.restart:focus,
.restart:hover {
  outline: none;
  background: var(--color-theme-1);
  color: white;
}

@keyframes wiggle {
  0% {
    transform: translateX(0);
  }
  10% {
    transform: translateX(-2px);
  }
  30% {
    transform: translateX(4px);
  }
  50% {
    transform: translateX(-6px);
  }
  70% {
    transform: translateX(+4px);
  }
  90% {
    transform: translateX(-2px);
  }
  100% {
    transform: translateX(0);
  }
}
